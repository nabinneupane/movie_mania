{"version":3,"sources":["Components/LandingPage.js","Components/DisplayCard/DisplayMovie.js","Components/DisplayCard/CardDisplay.js","Components/DisplayCard/ModalView.js","Components/Main.js","Components/Header.js","Components/Footer.js","App.js","serviceWorker.js","index.js","apiKey.js"],"names":["LandingPage","handleInput","searchItems","Jumbotron","className","style","backgroundColor","Col","sm","md","type","placeholder","onChange","onKeyPress","DisplayMovie","input","open","onClick","imdbID","Card","Header","Title","href","Poster","Img","src","alt","CardDisplay","arr","Container","fluid","Row","map","value","key","ModalView","selected","close","link","Modal","keyboard","backdrop","id","show","tabIndex","size","role","aria-hidden","datatoggle","onHide","autoFocus","animated","centered","Dialog","closeButton","Year","Body","Genre","Language","Released","Rated","imdbRating","Director","Writer","Actors","Production","Plot","Footer","target","rel","Button","variant","datadismiss","require","config","Main","useState","setInput","setArr","setSelected","api_OMDB","apiKey","REACT_APP_API_KEY_OMDB","e","s","finalApiSearch","axios","then","response","data","Search","catch","error","console","log","finalSearch","NavigationBar","Navbar","bg","expand","Brand","bottom","fontSize","Date","getFullYear","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.bb237131.chunk.js","sourcesContent":["import React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport { Jumbotron } from \"react-bootstrap\";\n\nconst LandingPage = ({ handleInput, searchItems }) => {\n  return (\n    <Jumbotron\n      className=\"mx-auto w-75 p-2 my-4\"\n      style={{ backgroundColor: \"darkgrey\" }}\n    >\n      <Col sm={12} md={12}>\n        <header className=\" text-center p-0 my-3 display-4  font-weight-bolder border-bottom border-success \">\n          Search a Movie\n        </header>\n      </Col>\n      <section>\n        <input\n          type=\"text\"\n          className=\"form-control form-control-lg w-75 mx-auto my-3\"\n          placeholder=\" Enter a movie name....\"\n          onChange={handleInput}\n          onKeyPress={searchItems}\n        />\n      </section>\n    </Jumbotron>\n  );\n};\n\nexport default LandingPage;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\n\nconst DisplayMovie = ({ input, open }) => {\n  return (\n    <Col\n      md={4}\n      sm={5}\n      className=\" d-flex flex-wrap pb-3 mb-5 \"\n      onClick={() => open(input.imdbID)}\n    >\n      <Card className=\"mx-auto flex-fill shadow text-white bg-secondary border-light \">\n        <Card.Header>\n          <Card.Title className=\"text-center\"> {input.Title} </Card.Title>\n          <a href=\"#\" className=\"stretched-link\" />\n        </Card.Header>\n        {input.Poster !== \"N/A\" ? (\n          <Card.Img\n            className=\"img-bottom img-fluid mx-auto\"\n            src={input.Poster}\n            alt=\"Card Img\"\n          />\n        ) : (\n          <div className=\"text-white mx-auto p-2 justify-content-center\">\n            No Preview....\n          </div>\n        )}\n      </Card>\n    </Col>\n  );\n};\n\nexport default DisplayMovie;\n","/* eslint-disable jsx-a11y/heading-has-content */\nimport React from \"react\";\nimport DisplayMovie from \"./DisplayMovie\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst CardDisplay = ({ arr, open }) => {\n  return (\n    <Container fluid={true}>\n      <Row className=\"justify-content-center\">\n        {typeof arr === \"undefined\" ? (\n          <Row className=\"h3 mx-auto text-dark  py-5 my-5\">\n            Oops.... There are no films with corresponding name. Please try a\n            new one..\n          </Row>\n        ) : (\n          arr.map((value) => (\n            <DisplayMovie key={value.imdbID} input={value} open={open} />\n          ))\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default CardDisplay;\n","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\n\nconst ModalView = ({ selected, close }) => {\n  const link = \"http://imdb.com/title/\" + selected.imdbID;\n\n  return (\n    <Modal\n      style={{ backgroundColor: \"linen\" }}\n      keyboard=\"false\"\n      backdrop=\"static\"\n      id={selected.imdbID}\n      show={true}\n      tabIndex=\"-1\"\n      size=\"lg\"\n      role=\"dialog\"\n      aria-hidden=\"true\"\n      datatoggle=\"modal\"\n      onHide={close}\n      autoFocus={true}\n      animated=\"true\"\n      centered\n    >\n      <Modal.Dialog role=\"document\">\n        <Modal.Header closeButton>\n          <Modal.Title className=\"mx-auto mb-2\">\n            {selected.Title} <span> ({selected.Year})</span>\n          </Modal.Title>\n        </Modal.Header>\n      </Modal.Dialog>\n      <Modal.Body className=\"p-2\">\n        <Row className=\"d-flex justify-content-center p-3 \">\n          <Col md={5}>\n            {selected.Poster !== \"N/A\" ? (\n              <img\n                src={selected.Poster}\n                className=\"thumbnail \"\n                alt=\"movie poster\"\n              />\n            ) : (\n              <div className=\" my-5 py-5 text-muted\">\n                No image to Display.....\n              </div>\n            )}\n          </Col>\n          <Col>\n            <ul className=\"list-group list-group-flush\">\n              {selected.Genre !== \"N/A\" ? (\n                <li className=\"list-group-item\">\n                  <strong> Genre: </strong>\n                  <span> {selected.Genre} </span>\n                </li>\n              ) : (\n                false\n              )}\n\n              {selected.Language !== \"N/A\" ? (\n                <li className=\"list-group-item\">\n                  <strong> Language: </strong>\n                  <span> {selected.Language} </span>\n                </li>\n              ) : (\n                false\n              )}\n\n              {selected.Released !== \"N/A\" ? (\n                <li className=\"list-group-item\">\n                  <strong> Released: </strong>\n                  <span> {selected.Released}</span>\n                </li>\n              ) : (\n                false\n              )}\n              {selected.Rated !== \"N/A\" ? (\n                <li className=\"list-group-item\">\n                  <strong> Rated: </strong>\n                  <span> {selected.Rated} </span>\n                </li>\n              ) : (\n                false\n              )}\n              {selected.imdbRating !== \"N/A\" ? (\n                <li className=\"list-group-item\">\n                  <strong> IMDB Rating: </strong>\n                  <span> {selected.imdbRating} </span>\n                </li>\n              ) : (\n                false\n              )}\n              {selected.Director !== \"N/A\" ? (\n                <li className=\"list-group-item\">\n                  <strong> Director: </strong>\n                  <span> {selected.Director} </span>\n                </li>\n              ) : (\n                false\n              )}\n              {selected.Writer !== \"N/A\" ? (\n                <li className=\"list-group-item\">\n                  <strong> Writer: </strong>\n                  <span> {selected.Writer} </span>\n                </li>\n              ) : (\n                false\n              )}\n\n              {selected.Actors !== \"N/A\" ? (\n                <li className=\"list-group-item\">\n                  <strong> Actors: </strong>\n                  <span> {selected.Actors} </span>\n                </li>\n              ) : (\n                false\n              )}\n              {selected.Production !== \"N/A\" ? (\n                <li className=\"list-group-item\">\n                  <strong> Production: </strong>\n                  <span> {selected.Production} </span>\n                </li>\n              ) : (\n                false\n              )}\n            </ul>\n          </Col>\n        </Row>\n        <Modal.Title className=\"display-4 border-top p-2\">Plot</Modal.Title>\n        <p className=\"text-muted\">\n          {selected.Plot === \"N/A\" ? \"No plot to display\" : selected.Plot}\n        </p>\n      </Modal.Body>\n      <Modal.Footer className=\"mx-auto\">\n        <a\n          href={link}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"btn btn-primary\"\n        >\n          View IMDB\n        </a>\n        <Button variant=\"secondary\" datadismiss=\"modal\" onClick={close}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default ModalView;\n","import React, { useState } from \"react\";\nimport LandingPage from \"./LandingPage\";\nimport Container from \"react-bootstrap/Container\";\nimport CardDisplay from \"./DisplayCard/CardDisplay\";\n//import ModalPopup from \"./DisplayCard/ModalPopup\";\nimport ModalView from \"./DisplayCard/ModalView\";\nimport apiKey from \"../apiKey\";\nimport axios from \"axios\";\nrequire(\"dotenv\").config();\n\nconst Main = () => {\n  const [input, setInput] = useState(\"\");\n  const [arr, setArr] = useState([]);\n  const [selected, setSelected] = useState({});\n\n  const apiKey_OMDB = apiKey.REACT_APP_API_KEY_OMDB;\n  const api_OMDB = `//www.omdbapi.com/?apikey=` + apiKey_OMDB;\n\n  const handleInput = (e) => {\n    let s = e.target.value;\n    setInput(s);\n  };\n\n  const searchItems = (e) => {\n    if (e.key === \"Enter\") {\n      const finalApiSearch = api_OMDB + \"&s=\" + input;\n\n      axios(finalApiSearch)\n        .then(({ data }) => {\n          let response = data.Search;\n          // console.log(response);\n          setArr(response);\n        })\n        .catch((error) => {\n          console.log(\"Error is: \", error);\n          setArr([]);\n        });\n    }\n  };\n\n  const openModal = (id) => {\n    const finalSearch = api_OMDB + \"&i=\" + id;\n    axios(finalSearch).then(({ data }) => {\n      let result = data;\n      // console.log(result);\n      setSelected(result);\n    });\n  };\n\n  const closeModal = () => {\n    setSelected({});\n  };\n  return (\n    <Container fluid={true}>\n      <LandingPage handleInput={handleInput} searchItems={searchItems} />\n      <CardDisplay arr={arr} open={openModal} />\n      {typeof selected.Title != \"undefined\" ? (\n        <ModalView selected={selected} close={closeModal} />\n      ) : (\n        false\n      )}\n    </Container>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Navbar from \"react-bootstrap/Navbar\";\n\nconst NavigationBar = () => {\n  return (\n    <Container className=\"p-0\" fluid={true}>\n      <Navbar bg=\"dark\" variant=\"dark \" className=\"border-light\" expand=\"lg\">\n        <Navbar.Brand className=\"mx-auto \">Movie Mania </Navbar.Brand>\n      </Navbar>\n    </Container>\n  );\n};\n\nexport default NavigationBar;\n","import React from \"react\";\n\nimport { MDBFooter, MDBContainer } from \"mdbreact\";\n\nconst Footer = () => {\n  return (\n    <MDBFooter\n      className=\"bg-dark text-light mt-auto position-absolute\n    w-100 mt-5 \"\n      style={{ bottom: 0 }}\n    >\n      <div className=\"footer-copyright text-center py-3 \">\n        <MDBContainer fluid style={{ fontSize: \"20px\" }}>\n          &copy; {new Date().getFullYear()} Copyright: Nabin Neupane\n        </MDBContainer>\n      </div>\n    </MDBFooter>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nimport Main from \"./Components/Main\";\nimport Header from \"./Components/Header\";\nimport Footer from \"./Components/Footer\";\n\nfunction App() {\n  return (\n    <div\n      style={{ backgroundColor: \"linen\" }}\n      className=\"min-vh-100 position-relative\"\n    >\n      <Header />\n\n      <Main />\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n  REACT_APP_API_KEY_OMDB: \"7430f6bb\",\n};\n"],"sourceRoot":""}